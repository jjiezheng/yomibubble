    void triplanar2_OS_vs(
		in float4 iPosition : POSITION,               
		in float3 iNormal : NORMAL,
		in float delta     : BLENDWEIGHT,
		in float2 iUv : TEXCOORD0,

		uniform float4x4 worldviewproj,

		out float4 oPosition : POSITION,
		out float3 oNormal : TEXCOORD0,
		out float3 oPos : TEXCOORD1,
		out float4 oColor    : COLOR,
		out float2 oUv : TEXCOORD7
       )
    {   
		iPosition.y = iPosition.y + (delta.x * 0.2);
		oPosition = mul(worldviewproj, iPosition);
		oNormal = iNormal;
		oPos = iPosition.xyz / iPosition.w;
		oColor = float4(1, 1, 1, 1);
		oUv = iUv;
    }

    void triplanar2_OS_ps(
		in float4 iPosition : POSITION,
		in float3 iNormal : TEXCOORD0,
		in float4 iPos : TEXCOORD1,	   	   
		in float2 iUv: TEXCOORD7,

		uniform sampler2D splat1,
		uniform sampler2D splat2,
		uniform sampler2D splat3,

		uniform sampler2D covMap1,

		uniform float splatScaleX,
		uniform float splatScaleZ,
			
		out float4 oColor : COLOR
    )
    {   
		float3 cov1 = tex2D(covMap1, iUv).rgb;
		
		float3 blend_weights = abs( iNormal.xyz );  
        blend_weights = (blend_weights - 0.2) * 7;
        blend_weights = max(blend_weights, 0);     
        blend_weights /= (blend_weights.x + blend_weights.y + blend_weights.z ).xxx;
		
        float4 blended_color; 
        float tex_scale = 1.0/splatScaleX;       
           
		float2 coord1 = iPos.yz * tex_scale;
		float2 coord2 = iPos.zx * tex_scale;
		float2 coord3 = iPos.xy * tex_scale;
					   
		float4 col1 = tex2D(splat1, coord1);
		float4 col2 = tex2D(splat1, coord2);
		float4 col3 = tex2D(splat1, coord3);

		float4 col4 = tex2D(splat2, coord1);
		float4 col5 = tex2D(splat2, coord2);
		float4 col6 = tex2D(splat2, coord3);  

		float4 col7 = tex2D(splat3, coord1);
		float4 col8 = tex2D(splat3, coord2);
		float4 col9 = tex2D(splat3, coord3);

		col1 = cov1.rrrr *col1 + col4* cov1.gggg + col7 * cov1.bbbb;
		col2 = cov1.rrrr *col2 + col5* cov1.gggg + col8 * cov1.bbbb;
		col3 = cov1.rrrr *col3 + col6* cov1.gggg + col9 * cov1.bbbb;

		blended_color = col1.xyzw * blend_weights.xxxx +
						col2.xyzw * blend_weights.yyyy +
						col3.xyzw * blend_weights.zzzz;

		oColor = blended_color;
    }
